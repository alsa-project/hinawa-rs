<?xml version="1.0"?>
<!-- This file was automatically generated from C sources - DO NOT EDIT!
To affect the contents of this file, edit the original C definitions,
and/or use gtk-doc annotations.  -->
<repository version="1.2"
            xmlns="http://www.gtk.org/introspection/core/1.0"
            xmlns:c="http://www.gtk.org/introspection/c/1.0"
            xmlns:glib="http://www.gtk.org/introspection/glib/1.0">
  <include name="GLib" version="2.0"/>
  <include name="GObject" version="2.0"/>
  <package name="hinawa"/>
  <namespace name="Hinawa"
             version="3.0"
             shared-library="libhinawa.so.2"
             c:identifier-prefixes="Hinawa"
             c:symbol-prefixes="hinawa_">
    <function-macro name="FW_FCP"
                    c:identifier="HINAWA_FW_FCP"
                    introspectable="0">
      <source-position filename="../src/fw_fcp.h" line="16"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_FCP_CLASS"
                    c:identifier="HINAWA_FW_FCP_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_fcp.h" line="24"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_FCP_GET_CLASS"
                    c:identifier="HINAWA_FW_FCP_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_fcp.h" line="31"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_NODE"
                    c:identifier="HINAWA_FW_NODE"
                    introspectable="0">
      <source-position filename="../src/fw_node.h" line="12"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_NODE_CLASS"
                    c:identifier="HINAWA_FW_NODE_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_node.h" line="20"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_NODE_GET_CLASS"
                    c:identifier="HINAWA_FW_NODE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_node.h" line="27"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_REQ"
                    c:identifier="HINAWA_FW_REQ"
                    introspectable="0">
      <source-position filename="../src/fw_req.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_REQ_CLASS"
                    c:identifier="HINAWA_FW_REQ_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_req.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_REQ_GET_CLASS"
                    c:identifier="HINAWA_FW_REQ_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_req.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_RESP"
                    c:identifier="HINAWA_FW_RESP"
                    introspectable="0">
      <source-position filename="../src/fw_resp.h" line="15"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_RESP_CLASS"
                    c:identifier="HINAWA_FW_RESP_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_resp.h" line="23"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="FW_RESP_GET_CLASS"
                    c:identifier="HINAWA_FW_RESP_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_resp.h" line="30"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="FwFcp"
           c:symbol-prefix="fw_fcp"
           c:type="HinawaFwFcp"
           parent="FwResp"
           glib:type-name="HinawaFwFcp"
           glib:get-type="hinawa_fw_fcp_get_type"
           glib:type-struct="FwFcpClass">
      <source-position filename="../src/fw_fcp.h" line="66"/>
      <constructor name="new" c:identifier="hinawa_fw_fcp_new" version="1.3.">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="194">Instantiate #HinawaFwFcp object and return the instance.</doc>
        <source-position filename="../src/fw_fcp.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/fw_fcp.c"
               line="199">an instance of #HinawaFwFcp.</doc>
          <type name="FwFcp" c:type="HinawaFwFcp*"/>
        </return-value>
      </constructor>
      <virtual-method name="responded">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.h"
             line="53">When the unit transfers asynchronous packet as response for Echo Audio Fireworks
protocol, and the process successfully reads the content of packet from ALSA
Fireworks driver, the #HinawaFwFcpClass::responded signal handler is called with
parameters of the response.</doc>
        <source-position filename="../src/fw_fcp.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.h"
                 line="55">A #HinawaFwFcp.</doc>
            <type name="FwFcp" c:type="HinawaFwFcp*"/>
          </instance-parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.h"
                 line="56">The array with elements for byte
        data of response for Function Control Protocol.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="frame_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.h"
                 line="58">The number of elements of the array.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="avc_transaction"
              c:identifier="hinawa_fw_fcp_avc_transaction"
              version="2.1."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="269">Finish the pair of AV/C command and response transactions. The timeout_ms parameter is
used to wait for response transaction since the command transaction is initiated, ignoring
#HinawaFwFcp:timeout property of instance. The timeout is not expanded in the case that AV/C
INTERIM status is arrived, thus the caller should expand the timeout in advance for the case.</doc>
        <source-position filename="../src/fw_fcp.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="271">A #HinawaFwFcp.</doc>
            <type name="FwFcp" c:type="HinawaFwFcp*"/>
          </instance-parameter>
          <parameter name="cmd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="272">An array with elements for request byte data. The value of
 this argument should point to the array and immutable.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="cmd_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="274">The size of array for request in byte unit.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="resp"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="275">An array with elements for response byte data. Callers
  should give it for buffer with enough space against the request since this library
  performs no reallocation. Due to the reason, the value of this argument should point to
  the pointer to the array and immutable. The content of array is mutable.</doc>
            <array length="3" zero-terminated="0" c:type="guint8* const*">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="resp_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="279">The size of array for response in byte unit. The value of this argument should point to
       the numerical number and mutable.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="timeout_ms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="281">The timeout to wait for response transaction since command transactions finishes.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="bind" c:identifier="hinawa_fw_fcp_bind" throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="412">Start to listen to FCP responses.</doc>
        <source-position filename="../src/fw_fcp.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="414">A #HinawaFwFcp.</doc>
            <type name="FwFcp" c:type="HinawaFwFcp*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="415">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </parameter>
        </parameters>
      </method>
      <method name="command"
              c:identifier="hinawa_fw_fcp_command"
              version="2.1."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="207">Transfer command frame for FCP. When receiving response frame for FCP,
#HinawaFwFcp::responded signal is emitted.</doc>
        <source-position filename="../src/fw_fcp.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="209">A #HinawaFwFcp.</doc>
            <type name="FwFcp" c:type="HinawaFwFcp*"/>
          </instance-parameter>
          <parameter name="cmd" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="210">An array with elements for request byte data. The value of this
 argument should point to the array and immutable.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="cmd_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="212">The size of array for request in byte unit.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="timeout_ms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="213">The timeout to wait for response subaction of transaction for command frame.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction"
              c:identifier="hinawa_fw_fcp_transaction"
              version="1.4."
              deprecated="1"
              deprecated-version="2.1"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="356">Finish the pair of command and response transactions for FCP. The value of #HinawaFwFcp:timeout
property is used to wait for response transaction since the command transaction is initiated.</doc>
        <doc-deprecated xml:space="preserve">Use #hinawa_fw_fcp_avc_transaction(), instead.</doc-deprecated>
        <source-position filename="../src/fw_fcp.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="358">A #HinawaFwFcp.</doc>
            <type name="FwFcp" c:type="HinawaFwFcp*"/>
          </instance-parameter>
          <parameter name="req_frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="359">An array with elements for
       request byte data. The value of this argument should point to
       the array and immutable.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8*">
              <type name="guint8" c:type="guint8"/>
            </array>
          </parameter>
          <parameter name="req_frame_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="362">The size of array for request in byte unit.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="resp_frame"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="363">An array with elements
	for response byte data. Callers should give it for buffer with
	enough space against the request since this library performs no
	reallocation. Due to the reason, the value of this argument
	should point to the pointer to the array and immutable. The
	content of array is mutable.</doc>
            <array length="3" zero-terminated="0" c:type="guint8* const*">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="resp_frame_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="369">The size of array for response in byte unit. The value of
	     this argument should point to the numerical number and
	     mutable.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unbind" c:identifier="hinawa_fw_fcp_unbind" version="1.4.">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="441">Stop to listen to FCP responses.</doc>
        <source-position filename="../src/fw_fcp.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="443">A #HinawaFwFcp.</doc>
            <type name="FwFcp" c:type="HinawaFwFcp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="is-bound" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="timeout"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="FwResp" c:type="HinawaFwResp"/>
      </field>
      <field name="priv">
        <type name="FwFcpPrivate" c:type="HinawaFwFcpPrivate*"/>
      </field>
      <glib:signal name="responded" when="last">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="165">When the unit transfers asynchronous packet as response for Echo Audio Fireworks
protocol, and the process successfully reads the content of packet from ALSA
Fireworks driver, the #HinawaFwFcp::responded signal handler is called with parameters
of the response.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="168">The array with elements for byte
        data of response for Function Control Protocol.</doc>
            <array length="1" zero-terminated="0" c:type="gpointer">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="frame_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_fcp.c"
                 line="170">The number of elements of the array.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="FwFcpClass"
            c:type="HinawaFwFcpClass"
            glib:is-gtype-struct-for="FwFcp">
      <source-position filename="../src/fw_fcp.h" line="66"/>
      <field name="parent_class">
        <type name="FwRespClass" c:type="HinawaFwRespClass"/>
      </field>
      <field name="responded">
        <callback name="responded">
          <source-position filename="../src/fw_fcp.h" line="65"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_fcp.h"
                   line="55">A #HinawaFwFcp.</doc>
              <type name="FwFcp" c:type="HinawaFwFcp*"/>
            </parameter>
            <parameter name="frame" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_fcp.h"
                   line="56">The array with elements for byte
        data of response for Function Control Protocol.</doc>
              <array length="2" zero-terminated="0" c:type="const guint8*">
                <type name="guint8"/>
              </array>
            </parameter>
            <parameter name="frame_size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_fcp.h"
                   line="58">The number of elements of the array.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="FwFcpError"
                 glib:type-name="HinawaFwFcpError"
                 glib:get-type="hinawa_fw_fcp_error_get_type"
                 c:type="HinawaFwFcpError"
                 glib:error-domain="hinawa-fw-fcp-error-quark">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="141">A set of error code for GError with domain which equals to #hinawa_fw_fcp_error_quark().</doc>
      <member name="timeout"
              value="0"
              c:identifier="HINAWA_FW_FCP_ERROR_TIMEOUT"
              glib:nick="timeout">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="143">The transaction is canceled due to response timeout.</doc>
      </member>
      <member name="large_resp"
              value="1"
              c:identifier="HINAWA_FW_FCP_ERROR_LARGE_RESP"
              glib:nick="large-resp">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="144">The size of response is larger than expected.</doc>
      </member>
      <function name="quark" c:identifier="hinawa_fw_fcp_error_quark">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="25">Return the GQuark for error domain of GError which has code in #HinawaFwFcpError.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_fcp.c"
               line="30">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="FwFcpPrivate" c:type="HinawaFwFcpPrivate" disguised="1">
      <source-position filename="../src/fw_fcp.h" line="42"/>
    </record>
    <class name="FwNode"
           c:symbol-prefix="fw_node"
           c:type="HinawaFwNode"
           parent="GObject.Object"
           glib:type-name="HinawaFwNode"
           glib:get-type="hinawa_fw_node_get_type"
           glib:type-struct="FwNodeClass">
      <source-position filename="../src/fw_node.h" line="72"/>
      <constructor name="new" c:identifier="hinawa_fw_node_new" version="1.4.">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="240">Instantiate #HinawaFwNode object and return the instance.</doc>
        <source-position filename="../src/fw_node.h" line="76"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/fw_node.c"
               line="245">an instance of #HinawaFwNode.</doc>
          <type name="FwNode" c:type="HinawaFwNode*"/>
        </return-value>
      </constructor>
      <virtual-method name="bus_update" version="1.4.">
        <doc xml:space="preserve"
             filename="../src/fw_node.h"
             line="49">When IEEE 1394 bus is updated, the #HinawaFwNodeClass::bus-update handler is called.
The handlers can read current generation in the bus via 'generation'
property.</doc>
        <source-position filename="../src/fw_node.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_node.h"
                 line="51">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="disconnected" version="1.4.">
        <doc xml:space="preserve"
             filename="../src/fw_node.h"
             line="61">When phicical FireWire devices are disconnected from IEEE 1394 bus,
the #HinawaFwNodeClass::disconnected handler is called.</doc>
        <source-position filename="../src/fw_node.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_node.h"
                 line="63">A #HinawaFwNode</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <method name="create_source"
              c:identifier="hinawa_fw_node_create_source"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="458">Create Gsource for GMainContext to dispatch events for the node on IEEE 1394
bus.</doc>
        <source-position filename="../src/fw_node.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_node.c"
                 line="460">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </instance-parameter>
          <parameter name="gsrc"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_node.c"
                 line="461">A #GSource.</doc>
            <type name="GLib.Source" c:type="GSource**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_config_rom"
              c:identifier="hinawa_fw_node_get_config_rom"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="336">Get cached content of configuration ROM.</doc>
        <source-position filename="../src/fw_node.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_node.c"
                 line="338">A #HinawaFwNode</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </instance-parameter>
          <parameter name="image"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_node.c"
                 line="339">The content of
   configuration ROM.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8**">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_node.c"
                 line="341">The number of bytes consists of the configuration rom.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="open"
              c:identifier="hinawa_fw_node_open"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="281">Open Linux FireWire character device to operate node on IEEE 1394 bus.</doc>
        <source-position filename="../src/fw_node.h" line="78"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_node.c"
                 line="283">A #HinawaFwNode</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_node.c"
                 line="284">A path to Linux FireWire character device</doc>
            <type name="utf8" c:type="const gchar*"/>
          </parameter>
        </parameters>
      </method>
      <property name="bus-manager-node-id" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="generation" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="ir-manager-node-id" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="local-node-id" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="node-id" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="root-node-id" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FwNodePrivate" c:type="HinawaFwNodePrivate*"/>
      </field>
      <glib:signal name="bus-update" when="last" version="1.4.">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="193">When IEEE 1394 bus is updated, the #HinawaFwNode::bus-update signal is generated.
Handlers can read current generation in the bus via 'generation'
property.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="disconnected" when="last" version="1.4.">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="212">When phicical FireWire devices are disconnected from IEEE 1394 bus,
the #HinawaFwNode::disconnected signal is generated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
    </class>
    <record name="FwNodeClass"
            c:type="HinawaFwNodeClass"
            glib:is-gtype-struct-for="FwNode">
      <source-position filename="../src/fw_node.h" line="72"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="bus_update">
        <callback name="bus_update">
          <source-position filename="../src/fw_node.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_node.h"
                   line="51">A #HinawaFwNode.</doc>
              <type name="FwNode" c:type="HinawaFwNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="disconnected">
        <callback name="disconnected">
          <source-position filename="../src/fw_node.h" line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_node.h"
                   line="63">A #HinawaFwNode</doc>
              <type name="FwNode" c:type="HinawaFwNode*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="FwNodeError"
                 glib:type-name="HinawaFwNodeError"
                 glib:get-type="hinawa_fw_node_error_get_type"
                 c:type="HinawaFwNodeError"
                 glib:error-domain="hinawa-fw-node-error-quark">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="109">A set of error code for GError with domain which equals to #hinawa_fw_node_error_quark().</doc>
      <member name="disconnected"
              value="0"
              c:identifier="HINAWA_FW_NODE_ERROR_DISCONNECTED"
              glib:nick="disconnected">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="111">The node associated to the instance is disconnected.</doc>
      </member>
      <member name="opened"
              value="1"
              c:identifier="HINAWA_FW_NODE_ERROR_OPENED"
              glib:nick="opened">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="112">The instance is already associated to node by opening
				firewire character device.</doc>
      </member>
      <member name="not_opened"
              value="2"
              c:identifier="HINAWA_FW_NODE_ERROR_NOT_OPENED"
              glib:nick="not-opened">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="114">The instance is not associated to node by opening
				firewire character device.</doc>
      </member>
      <member name="failed"
              value="3"
              c:identifier="HINAWA_FW_NODE_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="116">The system call fails.</doc>
      </member>
      <function name="quark" c:identifier="hinawa_fw_node_error_quark">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="46">Return the GQuark for error domain of GError which has code in #HinawaFwNodeError.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_node.c"
               line="51">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="FwNodePrivate" c:type="HinawaFwNodePrivate" disguised="1">
      <source-position filename="../src/fw_node.h" line="38"/>
    </record>
    <enumeration name="FwRcode"
                 glib:type-name="HinawaFwRcode"
                 glib:get-type="hinawa_fw_rcode_get_type"
                 c:type="HinawaFwRcode">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="54">A representation for rcode of asynchronous transaction on IEEE 1394 bus.</doc>
      <member name="complete"
              value="0"
              c:identifier="HINAWA_FW_RCODE_COMPLETE"
              glib:nick="complete">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="56">For completion.</doc>
      </member>
      <member name="conflict_error"
              value="4"
              c:identifier="HINAWA_FW_RCODE_CONFLICT_ERROR"
              glib:nick="conflict-error">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="57">For error of conflicting.</doc>
      </member>
      <member name="data_error"
              value="5"
              c:identifier="HINAWA_FW_RCODE_DATA_ERROR"
              glib:nick="data-error">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="58">For error of data.</doc>
      </member>
      <member name="type_error"
              value="6"
              c:identifier="HINAWA_FW_RCODE_TYPE_ERROR"
              glib:nick="type-error">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="59">For error of type.</doc>
      </member>
      <member name="address_error"
              value="7"
              c:identifier="HINAWA_FW_RCODE_ADDRESS_ERROR"
              glib:nick="address-error">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="60">For error of address.</doc>
      </member>
      <member name="send_error"
              value="16"
              c:identifier="HINAWA_FW_RCODE_SEND_ERROR"
              glib:nick="send-error">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="61">For error of sending.</doc>
      </member>
      <member name="cancelled"
              value="17"
              c:identifier="HINAWA_FW_RCODE_CANCELLED"
              glib:nick="cancelled">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="62">For cancellation.</doc>
      </member>
      <member name="busy"
              value="18"
              c:identifier="HINAWA_FW_RCODE_BUSY"
              glib:nick="busy">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="63">For busyness.</doc>
      </member>
      <member name="generation"
              value="19"
              c:identifier="HINAWA_FW_RCODE_GENERATION"
              glib:nick="generation">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="64">For generation.</doc>
      </member>
      <member name="no_ack"
              value="20"
              c:identifier="HINAWA_FW_RCODE_NO_ACK"
              glib:nick="no-ack">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="65">For no acknowledge.</doc>
      </member>
      <member name="invalid"
              value="21"
              c:identifier="HINAWA_FW_RCODE_INVALID"
              glib:nick="invalid">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="66">For rcode out of specification.</doc>
      </member>
    </enumeration>
    <class name="FwReq"
           c:symbol-prefix="fw_req"
           c:type="HinawaFwReq"
           parent="GObject.Object"
           glib:type-name="HinawaFwReq"
           glib:get-type="hinawa_fw_req_get_type"
           glib:type-struct="FwReqClass">
      <source-position filename="../src/fw_req.h" line="66"/>
      <constructor name="new" c:identifier="hinawa_fw_req_new" version="1.3.">
        <doc xml:space="preserve"
             filename="../src/fw_req.c"
             line="144">Instantiate #HinawaFwReq object and return the instance.</doc>
        <source-position filename="../src/fw_req.h" line="70"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/fw_req.c"
               line="149">an instance of #HinawaFwReq.</doc>
          <type name="FwReq" c:type="HinawaFwReq*"/>
        </return-value>
      </constructor>
      <function name="error_quark" c:identifier="hinawa_fw_req_error_quark">
        <doc xml:space="preserve"
             filename="../src/fw_req.c"
             line="22">Return the GQuark for error domain of GError which has code in #HinawaFwRcode.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_req.c"
               line="27">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <virtual-method name="responded">
        <doc xml:space="preserve"
             filename="../src/fw_req.h"
             line="52">When the unit transfers asynchronous packet as response subaction for the transaction,
and the process successfully reads the content of packet from Linux firewire subsystem,
the #HinawaFwReqClass::responded handler is called.</doc>
        <source-position filename="../src/fw_req.h" line="64"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.h"
                 line="54">A #HinawaFwReq.</doc>
            <type name="FwReq" c:type="HinawaFwReq*"/>
          </instance-parameter>
          <parameter name="rcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.h"
                 line="55">One of #HinawaFwRcode.</doc>
            <type name="FwRcode" c:type="HinawaFwRcode"/>
          </parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.h"
                 line="56">The array with elements for
   byte data of response subaction for transaction.</doc>
            <array length="2" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="frame_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.h"
                 line="58">The number of elements of the array.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="transaction"
              c:identifier="hinawa_fw_req_transaction"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_req.c"
             line="377">Execute request subaction of transaction to the given node according to given code, then wait
for response subaction within #HinawaFwReq:timeout.</doc>
        <source-position filename="../src/fw_req.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="379">A #HinawaFwReq.</doc>
            <type name="FwReq" c:type="HinawaFwReq*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="380">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </parameter>
          <parameter name="tcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="381">A transaction code of HinawaFwTcode.</doc>
            <type name="FwTcode" c:type="HinawaFwTcode"/>
          </parameter>
          <parameter name="addr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="382">A destination address of target device</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="383">The range of address in byte unit.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="frame"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="384">An array with elements for byte
   data. Callers should give it for buffer with enough space against the
   request since this library performs no reallocation. Due to the
   reason, the value of this argument should point to the pointer to the
   array and immutable. The content of array is mutable for read and
   lock transaction.</doc>
            <array length="5" zero-terminated="0" c:type="guint8* const*">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="frame_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="390">The size of array in byte unit. The value of this argument
	should point to the numerical number and mutable for read and
	lock transaction.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_async"
              c:identifier="hinawa_fw_req_transaction_async"
              version="2.1."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_req.c"
             line="157">Execute request subaction of transactions to the given node according to given code. When the
response subaction arrives and read the contents, #HinawaFwReq::responded signal handler is called
as long as event dispatcher runs.</doc>
        <source-position filename="../src/fw_req.h" line="72"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="159">A #HinawaFwReq.</doc>
            <type name="FwReq" c:type="HinawaFwReq*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="160">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </parameter>
          <parameter name="tcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="161">A transaction code of HinawaFwTcode.</doc>
            <type name="FwTcode" c:type="HinawaFwTcode"/>
          </parameter>
          <parameter name="addr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="162">A destination address of target device</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="163">The range of address in byte unit.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="frame"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="164">An array with elements for byte
   data. Callers should give it for buffer with enough space against the
   request since this library performs no reallocation. Due to the
   reason, the value of this argument should point to the pointer to the
   array and immutable. The content of array is mutable for read and
   lock transaction.</doc>
            <array length="5" zero-terminated="0" c:type="guint8* const*">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="frame_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="170">The size of array in byte unit. The value of this argument
	should point to the numerical number and mutable for read and
	lock transaction.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_sync"
              c:identifier="hinawa_fw_req_transaction_sync"
              version="2.1."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_req.c"
             line="274">Execute request subaction of transaction to the given node according to given code, then wait
for response subaction within the given timeout. The #HinawaFwReq:timeout property of instance
is ignored.</doc>
        <source-position filename="../src/fw_req.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="276">A #HinawaFwReq.</doc>
            <type name="FwReq" c:type="HinawaFwReq*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="277">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </parameter>
          <parameter name="tcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="278">A transaction code of HinawaFwTcode.</doc>
            <type name="FwTcode" c:type="HinawaFwTcode"/>
          </parameter>
          <parameter name="addr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="279">A destination address of target device</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="280">The range of address in byte unit.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="frame"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="281">An array with elements for byte
   data. Callers should give it for buffer with enough space against the
   request since this library performs no reallocation. Due to the
   reason, the value of this argument should point to the pointer to the
   array and immutable. The content of array is mutable for read and
   lock transaction.</doc>
            <array length="5" zero-terminated="0" c:type="guint8* const*">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="frame_size"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="287">The size of array in byte unit. The value of this argument
	should point to the numerical number and mutable for read and
	lock transaction.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="timeout_ms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="290">The timeout to wait for response subaction of the transaction since request
	subaction is initiated, in milliseconds.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <property name="timeout"
                writable="1"
                construct="1"
                transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FwReqPrivate" c:type="HinawaFwReqPrivate*"/>
      </field>
      <glib:signal name="responded" when="last">
        <doc xml:space="preserve"
             filename="../src/fw_req.c"
             line="116">When the unit transfers asynchronous packet as response subaction for the transaction,
and the process successfully reads the content of packet from Linux firewire subsystem,
the #HinawaFwReq::responded signal handler is called.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="rcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="119">One of #HinawaFwRcode.</doc>
            <type name="FwRcode"/>
          </parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="120">The array with elements for
   byte data of response subaction for transaction.</doc>
            <array length="2" zero-terminated="0" c:type="gpointer">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="frame_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_req.c"
                 line="122">The number of elements of the array.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="FwReqClass"
            c:type="HinawaFwReqClass"
            glib:is-gtype-struct-for="FwReq">
      <source-position filename="../src/fw_req.h" line="66"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="responded">
        <callback name="responded">
          <source-position filename="../src/fw_req.h" line="64"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_req.h"
                   line="54">A #HinawaFwReq.</doc>
              <type name="FwReq" c:type="HinawaFwReq*"/>
            </parameter>
            <parameter name="rcode" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_req.h"
                   line="55">One of #HinawaFwRcode.</doc>
              <type name="FwRcode" c:type="HinawaFwRcode"/>
            </parameter>
            <parameter name="frame" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_req.h"
                   line="56">The array with elements for
   byte data of response subaction for transaction.</doc>
              <array length="3" zero-terminated="0" c:type="const guint8*">
                <type name="guint8"/>
              </array>
            </parameter>
            <parameter name="frame_size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_req.h"
                   line="58">The number of elements of the array.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="FwReqPrivate" c:type="HinawaFwReqPrivate" disguised="1">
      <source-position filename="../src/fw_req.h" line="41"/>
    </record>
    <class name="FwResp"
           c:symbol-prefix="fw_resp"
           c:type="HinawaFwResp"
           parent="GObject.Object"
           glib:type-name="HinawaFwResp"
           glib:get-type="hinawa_fw_resp_get_type"
           glib:type-struct="FwRespClass">
      <source-position filename="../src/fw_resp.h" line="95"/>
      <constructor name="new" c:identifier="hinawa_fw_resp_new" version="1.3.">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="178">Instantiate #HinawaFwResp object and return the instance.</doc>
        <source-position filename="../src/fw_resp.h" line="99"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/fw_resp.c"
               line="183">a new instance of #HinawaFwResp.</doc>
          <type name="FwResp" c:type="HinawaFwResp*"/>
        </return-value>
      </constructor>
      <virtual-method name="requested" deprecated="1" deprecated-version="2.2">
        <doc xml:space="preserve"
             filename="../src/fw_resp.h"
             line="52">When any node transfers requests to the range of address to which this object listening,
the #HinawaFwRespClass::requested signal handler is called with #HinawaFwTcode, without the
case that #HinawaFwRespClass::requested2 signal handler is already assigned.

The handler can get data frame by a call of #hinawa_fw_resp_get_req_frame() and set data
frame by a call of #hinawa_fw_resp_set_resp_frame(), then returns rcode.</doc>
        <doc-deprecated xml:space="preserve">Use #HinawaFwRespClass::requested2, instead.</doc-deprecated>
        <source-position filename="../src/fw_resp.h" line="69"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_resp.h"
               line="64">One of #HinawaRcode enumerators corresponding to rcodes defined in IEEE 1394
specification.</doc>
          <type name="FwRcode" c:type="HinawaFwRcode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="54">A #HinawaFwResp</doc>
            <type name="FwResp" c:type="HinawaFwResp*"/>
          </instance-parameter>
          <parameter name="tcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="55">One of #HinawaTcode enumerators</doc>
            <type name="FwTcode" c:type="HinawaFwTcode"/>
          </parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="requested2">
        <doc xml:space="preserve"
             filename="../src/fw_resp.h"
             line="71">When any node transfers request subaction to the range of address to which this object
listening, the #HinawaFwResp::requested signal handler is called with arrived frame for
the subaction. The handler is expected to call #hinawa_fw_resp_set_resp_frame() with
frame and return rcode for response subaction.</doc>
        <source-position filename="../src/fw_resp.h" line="92"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_resp.h"
               line="89">One of #HinawaRcode enumerators corresponding to rcodes defined in IEEE 1394
    specification.</doc>
          <type name="FwRcode" c:type="HinawaFwRcode"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="73">A #HinawaFwResp</doc>
            <type name="FwResp" c:type="HinawaFwResp*"/>
          </instance-parameter>
          <parameter name="tcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="74">One of #HinawaTcode enumerations</doc>
            <type name="FwTcode" c:type="HinawaFwTcode"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="75">The address offset at which the transaction arrives.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="76">The node ID of source for the transaction.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="dst" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="77">The node ID of destination for the transaction.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="card" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="78">The index of card corresponding to 1394 OHCI controller.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="generation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="79">The generation of bus when the transaction is transferred.</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="80">The array with elements for byte
   data.</doc>
            <array length="7" zero-terminated="0" c:type="const guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="82">The length of bytes for the frame.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_req_frame"
              c:identifier="hinawa_fw_resp_get_req_frame"
              deprecated="1"
              deprecated-version="2.2">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="285">Retrieve byte frame to be requested.</doc>
        <doc-deprecated xml:space="preserve">handler for #HinawaFwResp::requested2 signal can receive the frame in its
	    argument.</doc-deprecated>
        <source-position filename="../src/fw_resp.h" line="105"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="287">A #HinawaFwResp</doc>
            <type name="FwResp" c:type="HinawaFwResp*"/>
          </instance-parameter>
          <parameter name="frame"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="288">a 8bit array for response
	   frame.</doc>
            <array length="1" zero-terminated="0" c:type="const guint8**">
              <type name="guint8" c:type="guint8*"/>
            </array>
          </parameter>
          <parameter name="length"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="290">The length of bytes for the frame.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="release"
              c:identifier="hinawa_fw_resp_release"
              version="1.4.">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="248">stop to listen to a range of address in host controller.</doc>
        <source-position filename="../src/fw_resp.h" line="103"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="250">A HinawaFwResp.</doc>
            <type name="FwResp" c:type="HinawaFwResp*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="reserve"
              c:identifier="hinawa_fw_resp_reserve"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="191">Start to listen to a range of address in host controller which connects to
the node.</doc>
        <source-position filename="../src/fw_resp.h" line="101"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="193">A #HinawaFwResp.</doc>
            <type name="FwResp" c:type="HinawaFwResp*"/>
          </instance-parameter>
          <parameter name="node" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="194">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode*"/>
          </parameter>
          <parameter name="addr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="195">A start address to listen to in host controller.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="width" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="196">The byte width of address to listen to host controller.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <method name="set_resp_frame"
              c:identifier="hinawa_fw_resp_set_resp_frame">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="314">Register byte frame as response.</doc>
        <source-position filename="../src/fw_resp.h" line="107"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="316">A #HinawaFwResp</doc>
            <type name="FwResp" c:type="HinawaFwResp*"/>
          </instance-parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="317">a 8bit array for response
	   frame.</doc>
            <array length="1" zero-terminated="0" c:type="guint8*">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="319">The length of bytes for the frame.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
        </parameters>
      </method>
      <property name="is-reserved" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="FwRespPrivate" c:type="HinawaFwRespPrivate*"/>
      </field>
      <glib:signal name="requested"
                   when="last"
                   deprecated="1"
                   deprecated-version="2.2">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="114">When any node transfers requests to the range of address to which this object listening,
the #HinawaFwResp::requested signal handler is called with #HinawaFwTcode, without the
case that #HinawaFwResp::requested2 signal handler is already assigned.

The handler can get data frame by a call of #hinawa_fw_resp_get_req_frame() and set data
frame by a call of #hinawa_fw_resp_set_resp_frame(), then returns rcode.</doc>
        <doc-deprecated xml:space="preserve">Use #HinawaFwResp::requested2, instead.</doc-deprecated>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_resp.c"
               line="126">One of #HinawaRcode enumerators corresponding to rcodes defined in IEEE 1394
specification.</doc>
          <type name="FwRcode"/>
        </return-value>
        <parameters>
          <parameter name="tcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="117">One of #HinawaTcode enumerators</doc>
            <type name="FwTcode"/>
          </parameter>
        </parameters>
      </glib:signal>
      <glib:signal name="requested2" when="last">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="140">When any node transfers request subaction to the range of address to which this object
listening, the #HinawaFwResp::requested signal handler is called with arrived frame for
the subaction. The handler is expected to call #hinawa_fw_resp_set_resp_frame() with
frame and return rcode for response subaction.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_resp.c"
               line="158">One of #HinawaRcode enumerators corresponding to rcodes defined in IEEE 1394
    specification.</doc>
          <type name="FwRcode"/>
        </return-value>
        <parameters>
          <parameter name="tcode" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="143">One of #HinawaTcode enumerations</doc>
            <type name="FwTcode"/>
          </parameter>
          <parameter name="offset" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="144">The address offset at which the transaction arrives.</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="src" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="145">The node ID of source for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="dst" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="146">The node ID of destination for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="card" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="147">The index of card corresponding to 1394 OHCI controller.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="generation" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="148">The generation of bus when the transaction is transferred.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="149">The array with elements for byte
   data.</doc>
            <array length="7" zero-terminated="0" c:type="gpointer">
              <type name="guint8"/>
            </array>
          </parameter>
          <parameter name="length" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.c"
                 line="151">The length of bytes for the frame.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="FwRespClass"
            c:type="HinawaFwRespClass"
            glib:is-gtype-struct-for="FwResp">
      <source-position filename="../src/fw_resp.h" line="95"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="requested">
        <callback name="requested">
          <source-position filename="../src/fw_resp.h" line="69"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="64">One of #HinawaRcode enumerators corresponding to rcodes defined in IEEE 1394
specification.</doc>
            <type name="FwRcode" c:type="HinawaFwRcode"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="54">A #HinawaFwResp</doc>
              <type name="FwResp" c:type="HinawaFwResp*"/>
            </parameter>
            <parameter name="tcode" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="55">One of #HinawaTcode enumerators</doc>
              <type name="FwTcode" c:type="HinawaFwTcode"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="requested2">
        <callback name="requested2">
          <source-position filename="../src/fw_resp.h" line="92"/>
          <return-value transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/fw_resp.h"
                 line="89">One of #HinawaRcode enumerators corresponding to rcodes defined in IEEE 1394
    specification.</doc>
            <type name="FwRcode" c:type="HinawaFwRcode"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="73">A #HinawaFwResp</doc>
              <type name="FwResp" c:type="HinawaFwResp*"/>
            </parameter>
            <parameter name="tcode" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="74">One of #HinawaTcode enumerations</doc>
              <type name="FwTcode" c:type="HinawaFwTcode"/>
            </parameter>
            <parameter name="offset" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="75">The address offset at which the transaction arrives.</doc>
              <type name="guint64" c:type="guint64"/>
            </parameter>
            <parameter name="src" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="76">The node ID of source for the transaction.</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="dst" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="77">The node ID of destination for the transaction.</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="card" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="78">The index of card corresponding to 1394 OHCI controller.</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="generation" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="79">The generation of bus when the transaction is transferred.</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
            <parameter name="frame" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="80">The array with elements for byte
   data.</doc>
              <array length="8" zero-terminated="0" c:type="const guint8*">
                <type name="guint8"/>
              </array>
            </parameter>
            <parameter name="length" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/fw_resp.h"
                   line="82">The length of bytes for the frame.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="FwRespError"
                 glib:type-name="HinawaFwRespError"
                 glib:get-type="hinawa_fw_resp_error_get_type"
                 c:type="HinawaFwRespError"
                 glib:error-domain="hinawa-fw-resp-error-quark">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="127">A set of error code for GError with domain which equals to #hinawa_fw_resp_error_quark().</doc>
      <member name="failed"
              value="0"
              c:identifier="HINAWA_FW_RESP_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="129">The generic system call error.</doc>
      </member>
      <member name="reserved"
              value="1"
              c:identifier="HINAWA_FW_RESP_ERROR_RESERVED"
              glib:nick="reserved">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="130">The instance is already associated to reserved address range.</doc>
      </member>
      <member name="addr_space_used"
              value="2"
              c:identifier="HINAWA_FW_RESP_ERROR_ADDR_SPACE_USED"
              glib:nick="addr-space-used">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="131">The address space is used exclusively.</doc>
      </member>
      <function name="quark" c:identifier="hinawa_fw_resp_error_quark">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="22">Return the GQuark for error domain of GError which has code in #HinawaFwRespError.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/fw_resp.c"
               line="27">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="FwRespPrivate" c:type="HinawaFwRespPrivate" disguised="1">
      <source-position filename="../src/fw_resp.h" line="41"/>
    </record>
    <enumeration name="FwTcode"
                 glib:type-name="HinawaFwTcode"
                 glib:get-type="hinawa_fw_tcode_get_type"
                 c:type="HinawaFwTcode">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="9">A representation for tcode of asynchronous transaction on IEEE 1394 bus.</doc>
      <member name="write_quadlet_request"
              value="0"
              c:identifier="HINAWA_FW_TCODE_WRITE_QUADLET_REQUEST"
              glib:nick="write-quadlet-request">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="11">For request to write quadlet.</doc>
      </member>
      <member name="write_block_request"
              value="1"
              c:identifier="HINAWA_FW_TCODE_WRITE_BLOCK_REQUEST"
              glib:nick="write-block-request">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="12">For request to write block.</doc>
      </member>
      <member name="write_response"
              value="2"
              c:identifier="HINAWA_FW_TCODE_WRITE_RESPONSE"
              glib:nick="write-response">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="13">For response to write.</doc>
      </member>
      <member name="read_quadlet_request"
              value="4"
              c:identifier="HINAWA_FW_TCODE_READ_QUADLET_REQUEST"
              glib:nick="read-quadlet-request">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="14">For response to read quadlet.</doc>
      </member>
      <member name="read_block_request"
              value="5"
              c:identifier="HINAWA_FW_TCODE_READ_BLOCK_REQUEST"
              glib:nick="read-block-request">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="15">For request to read block.</doc>
      </member>
      <member name="read_quadlet_response"
              value="6"
              c:identifier="HINAWA_FW_TCODE_READ_QUADLET_RESPONSE"
              glib:nick="read-quadlet-response">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="16">For response to quadlet read.</doc>
      </member>
      <member name="read_block_response"
              value="7"
              c:identifier="HINAWA_FW_TCODE_READ_BLOCK_RESPONSE"
              glib:nick="read-block-response">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="17">For response to block read.</doc>
      </member>
      <member name="cycle_start"
              value="8"
              c:identifier="HINAWA_FW_TCODE_CYCLE_START"
              glib:nick="cycle-start">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="18">For cycle start.</doc>
      </member>
      <member name="lock_request"
              value="9"
              c:identifier="HINAWA_FW_TCODE_LOCK_REQUEST"
              glib:nick="lock-request">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="19">For request to lock.</doc>
      </member>
      <member name="stream_data"
              value="10"
              c:identifier="HINAWA_FW_TCODE_STREAM_DATA"
              glib:nick="stream-data">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="20">For stream data.</doc>
      </member>
      <member name="lock_response"
              value="11"
              c:identifier="HINAWA_FW_TCODE_LOCK_RESPONSE"
              glib:nick="lock-response">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="21">For response to lock.</doc>
      </member>
      <member name="lock_mask_swap"
              value="17"
              c:identifier="HINAWA_FW_TCODE_LOCK_MASK_SWAP"
              glib:nick="lock-mask-swap">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="22">For lock request for mask-swap.</doc>
      </member>
      <member name="lock_compare_swap"
              value="18"
              c:identifier="HINAWA_FW_TCODE_LOCK_COMPARE_SWAP"
              glib:nick="lock-compare-swap">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="23">For lock request for compare-swap.</doc>
      </member>
      <member name="lock_fetch_add"
              value="19"
              c:identifier="HINAWA_FW_TCODE_LOCK_FETCH_ADD"
              glib:nick="lock-fetch-add">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="24">For lock request for fetch-add.</doc>
      </member>
      <member name="lock_little_add"
              value="20"
              c:identifier="HINAWA_FW_TCODE_LOCK_LITTLE_ADD"
              glib:nick="lock-little-add">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="25">For lock request for little-add.</doc>
      </member>
      <member name="lock_bounded_add"
              value="21"
              c:identifier="HINAWA_FW_TCODE_LOCK_BOUNDED_ADD"
              glib:nick="lock-bounded-add">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="26">For lock request for bounded-add.</doc>
      </member>
      <member name="lock_wrap_add"
              value="22"
              c:identifier="HINAWA_FW_TCODE_LOCK_WRAP_ADD"
              glib:nick="lock-wrap-add">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="27">For lock request for wrap-add.</doc>
      </member>
      <member name="lock_vendor_dependent"
              value="23"
              c:identifier="HINAWA_FW_TCODE_LOCK_VENDOR_DEPENDENT"
              glib:nick="lock-vendor-dependent">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="28">For lock request for vendor-dependent.</doc>
      </member>
    </enumeration>
    <function-macro name="IS_FW_FCP"
                    c:identifier="HINAWA_IS_FW_FCP"
                    introspectable="0">
      <source-position filename="../src/fw_fcp.h" line="20"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FW_FCP_CLASS"
                    c:identifier="HINAWA_IS_FW_FCP_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_fcp.h" line="28"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FW_NODE"
                    c:identifier="HINAWA_IS_FW_NODE"
                    introspectable="0">
      <source-position filename="../src/fw_node.h" line="16"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FW_NODE_CLASS"
                    c:identifier="HINAWA_IS_FW_NODE_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_node.h" line="24"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FW_REQ"
                    c:identifier="HINAWA_IS_FW_REQ"
                    introspectable="0">
      <source-position filename="../src/fw_req.h" line="19"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FW_REQ_CLASS"
                    c:identifier="HINAWA_IS_FW_REQ_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_req.h" line="27"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FW_RESP"
                    c:identifier="HINAWA_IS_FW_RESP"
                    introspectable="0">
      <source-position filename="../src/fw_resp.h" line="19"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_FW_RESP_CLASS"
                    c:identifier="HINAWA_IS_FW_RESP_CLASS"
                    introspectable="0">
      <source-position filename="../src/fw_resp.h" line="27"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_DG00X"
                    c:identifier="HINAWA_IS_SND_DG00X"
                    introspectable="0">
      <source-position filename="../src/snd_dg00x.h" line="18"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_DG00X_CLASS"
                    c:identifier="HINAWA_IS_SND_DG00X_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_dg00x.h" line="26"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_DICE"
                    c:identifier="HINAWA_IS_SND_DICE"
                    introspectable="0">
      <source-position filename="../src/snd_dice.h" line="18"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_DICE_CLASS"
                    c:identifier="HINAWA_IS_SND_DICE_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_dice.h" line="26"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_EFW"
                    c:identifier="HINAWA_IS_SND_EFW"
                    introspectable="0">
      <source-position filename="../src/snd_efw.h" line="18"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_EFW_CLASS"
                    c:identifier="HINAWA_IS_SND_EFW_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_efw.h" line="26"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_MOTU"
                    c:identifier="HINAWA_IS_SND_MOTU"
                    introspectable="0">
      <source-position filename="../src/snd_motu.h" line="18"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_MOTU_CLASS"
                    c:identifier="HINAWA_IS_SND_MOTU_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_motu.h" line="26"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_TSCM"
                    c:identifier="HINAWA_IS_SND_TSCM"
                    introspectable="0">
      <source-position filename="../src/snd_tscm.h" line="18"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_TSCM_CLASS"
                    c:identifier="HINAWA_IS_SND_TSCM_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_tscm.h" line="26"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_UNIT"
                    c:identifier="HINAWA_IS_SND_UNIT"
                    introspectable="0">
      <source-position filename="../src/snd_unit.h" line="18"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="IS_SND_UNIT_CLASS"
                    c:identifier="HINAWA_IS_SND_UNIT_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_unit.h" line="26"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_DG00X"
                    c:identifier="HINAWA_SND_DG00X"
                    introspectable="0">
      <source-position filename="../src/snd_dg00x.h" line="14"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_DG00X_CLASS"
                    c:identifier="HINAWA_SND_DG00X_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_dg00x.h" line="22"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_DG00X_GET_CLASS"
                    c:identifier="HINAWA_SND_DG00X_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_dg00x.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_DICE"
                    c:identifier="HINAWA_SND_DICE"
                    introspectable="0">
      <source-position filename="../src/snd_dice.h" line="14"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_DICE_CLASS"
                    c:identifier="HINAWA_SND_DICE_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_dice.h" line="22"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_DICE_GET_CLASS"
                    c:identifier="HINAWA_SND_DICE_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_dice.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_EFW"
                    c:identifier="HINAWA_SND_EFW"
                    introspectable="0">
      <source-position filename="../src/snd_efw.h" line="14"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_EFW_CLASS"
                    c:identifier="HINAWA_SND_EFW_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_efw.h" line="22"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_EFW_GET_CLASS"
                    c:identifier="HINAWA_SND_EFW_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_efw.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_MOTU"
                    c:identifier="HINAWA_SND_MOTU"
                    introspectable="0">
      <source-position filename="../src/snd_motu.h" line="14"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_MOTU_CLASS"
                    c:identifier="HINAWA_SND_MOTU_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_motu.h" line="22"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_MOTU_GET_CLASS"
                    c:identifier="HINAWA_SND_MOTU_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_motu.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_TSCM"
                    c:identifier="HINAWA_SND_TSCM"
                    introspectable="0">
      <source-position filename="../src/snd_tscm.h" line="14"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_TSCM_CLASS"
                    c:identifier="HINAWA_SND_TSCM_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_tscm.h" line="22"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_TSCM_GET_CLASS"
                    c:identifier="HINAWA_SND_TSCM_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_tscm.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_UNIT"
                    c:identifier="HINAWA_SND_UNIT"
                    introspectable="0">
      <source-position filename="../src/snd_unit.h" line="14"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_UNIT_CLASS"
                    c:identifier="HINAWA_SND_UNIT_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_unit.h" line="22"/>
      <parameters>
        <parameter name="klass">
        </parameter>
      </parameters>
    </function-macro>
    <function-macro name="SND_UNIT_GET_CLASS"
                    c:identifier="HINAWA_SND_UNIT_GET_CLASS"
                    introspectable="0">
      <source-position filename="../src/snd_unit.h" line="29"/>
      <parameters>
        <parameter name="obj">
        </parameter>
      </parameters>
    </function-macro>
    <class name="SndDg00x"
           c:symbol-prefix="snd_dg00x"
           c:type="HinawaSndDg00x"
           parent="SndUnit"
           glib:type-name="HinawaSndDg00x"
           glib:get-type="hinawa_snd_dg00x_get_type"
           glib:type-struct="SndDg00xClass">
      <source-position filename="../src/snd_dg00x.h" line="53"/>
      <constructor name="new"
                   c:identifier="hinawa_snd_dg00x_new"
                   version="1.3.">
        <doc xml:space="preserve"
             filename="../src/snd_dg00x.c"
             line="51">Instantiate #HinawaSndDg00x object and return the instance.</doc>
        <source-position filename="../src/snd_dg00x.h" line="57"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/snd_dg00x.c"
               line="56">an instance of #HinawaSndDg00x.</doc>
          <type name="SndDg00x" c:type="HinawaSndDg00x*"/>
        </return-value>
      </constructor>
      <virtual-method name="message">
        <doc xml:space="preserve"
             filename="../src/snd_dg00x.h"
             line="44">When Dg00x models transfer notification, the #HinawaSndDg00xClass::message handler is
called.</doc>
        <source-position filename="../src/snd_dg00x.h" line="52"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dg00x.h"
                 line="46">A #HinawaSndDg00x</doc>
            <type name="SndDg00x" c:type="HinawaSndDg00x*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dg00x.h"
                 line="47">A message</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="open" c:identifier="hinawa_snd_dg00x_open" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_dg00x.c"
             line="64">Open ALSA hwdep character device and check it for Dg00x  devices.</doc>
        <source-position filename="../src/snd_dg00x.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dg00x.c"
                 line="66">A #HinawaSndUnit</doc>
            <type name="SndDg00x" c:type="HinawaSndDg00x*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dg00x.c"
                 line="67">A full path of a special file for ALSA hwdep character device</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SndUnit" c:type="HinawaSndUnit"/>
      </field>
      <glib:signal name="message" when="last">
        <doc xml:space="preserve"
             filename="../src/snd_dg00x.c"
             line="28">When Dg00x models transfer notification, the #HinawaSndDg00x::message signal is
generated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dg00x.c"
                 line="31">A message</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SndDg00xClass"
            c:type="HinawaSndDg00xClass"
            glib:is-gtype-struct-for="SndDg00x">
      <source-position filename="../src/snd_dg00x.h" line="53"/>
      <field name="parent_class">
        <type name="SndUnitClass" c:type="HinawaSndUnitClass"/>
      </field>
      <field name="message">
        <callback name="message">
          <source-position filename="../src/snd_dg00x.h" line="52"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_dg00x.h"
                   line="46">A #HinawaSndDg00x</doc>
              <type name="SndDg00x" c:type="HinawaSndDg00x*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_dg00x.h"
                   line="47">A message</doc>
              <type name="guint32" c:type="guint32"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <class name="SndDice"
           c:symbol-prefix="snd_dice"
           c:type="HinawaSndDice"
           parent="SndUnit"
           glib:type-name="HinawaSndDice"
           glib:get-type="hinawa_snd_dice_get_type"
           glib:type-struct="SndDiceClass">
      <source-position filename="../src/snd_dice.h" line="60"/>
      <constructor name="new"
                   c:identifier="hinawa_snd_dice_new"
                   version="1.3.">
        <doc xml:space="preserve"
             filename="../src/snd_dice.c"
             line="93">Instantiate #HinawaSndDice object and return the instance.</doc>
        <source-position filename="../src/snd_dice.h" line="64"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/snd_dice.c"
               line="98">an instance of #HinawaSndDice.</doc>
          <type name="SndDice" c:type="HinawaSndDice*"/>
        </return-value>
      </constructor>
      <virtual-method name="notified">
        <doc xml:space="preserve"
             filename="../src/snd_dice.h"
             line="51">When Dice models transfer notification, the #HinawaSndDiceClass::notified handler is
called.</doc>
        <source-position filename="../src/snd_dice.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.h"
                 line="53">A #HinawaSndDice</doc>
            <type name="SndDice" c:type="HinawaSndDice*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.h"
                 line="54">A notification message</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="open" c:identifier="hinawa_snd_dice_open" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_dice.c"
             line="106">Open ALSA hwdep character device and check it for Dice  devices.</doc>
        <source-position filename="../src/snd_dice.h" line="66"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="108">A #HinawaSndUnit</doc>
            <type name="SndDice" c:type="HinawaSndDice*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="109">A full path of a special file for ALSA hwdep character device</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction"
              c:identifier="hinawa_snd_dice_transaction"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_dice.c"
             line="135">Execute write transactions to the given address, then wait and check
notification.</doc>
        <source-position filename="../src/snd_dice.h" line="68"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="137">A #HinawaSndDice</doc>
            <type name="SndDice" c:type="HinawaSndDice*"/>
          </instance-parameter>
          <parameter name="addr" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="138">A destination address of target device</doc>
            <type name="guint64" c:type="guint64"/>
          </parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="139">An array with elements for quadlet
   data to transmit.</doc>
            <array length="2" zero-terminated="0" c:type="const guint32*">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
          <parameter name="frame_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="141">The number of quadlets in the frame.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="bit_flag" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="142">bit flag to wait</doc>
            <type name="guint32" c:type="guint32"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SndUnit" c:type="HinawaSndUnit"/>
      </field>
      <field name="priv">
        <type name="SndDicePrivate" c:type="HinawaSndDicePrivate*"/>
      </field>
      <glib:signal name="notified" when="last">
        <doc xml:space="preserve"
             filename="../src/snd_dice.c"
             line="70">When Dice models transfer notification, the #HinawaSndDice::notified signal is
generated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_dice.c"
                 line="73">A notification message</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SndDiceClass"
            c:type="HinawaSndDiceClass"
            glib:is-gtype-struct-for="SndDice">
      <source-position filename="../src/snd_dice.h" line="60"/>
      <field name="parent_class">
        <type name="SndUnitClass" c:type="HinawaSndUnitClass"/>
      </field>
      <field name="notified">
        <callback name="notified">
          <source-position filename="../src/snd_dice.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_dice.h"
                   line="53">A #HinawaSndDice</doc>
              <type name="SndDice" c:type="HinawaSndDice*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_dice.h"
                   line="54">A notification message</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="SndDiceError"
                 glib:type-name="HinawaSndDiceError"
                 glib:get-type="hinawa_snd_dice_error_get_type"
                 c:type="HinawaSndDiceError"
                 glib:error-domain="hinawa-snd-dice-error-quark">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="179">A set of error code for GError with domain which equals to #hinawa_snd_dice_error_quark().</doc>
      <member name="timeout"
              value="0"
              c:identifier="HINAWA_SND_DICE_ERROR_TIMEOUT"
              glib:nick="timeout">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="181">The transaction is canceled due to response timeout.</doc>
      </member>
      <function name="quark" c:identifier="hinawa_snd_dice_error_quark">
        <doc xml:space="preserve"
             filename="../src/snd_dice.c"
             line="17">Return the GQuark for error domain of GError which has code in #HinawaSndDiceError.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/snd_dice.c"
               line="22">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="SndDicePrivate" c:type="HinawaSndDicePrivate" disguised="1">
      <source-position filename="../src/snd_dice.h" line="40"/>
    </record>
    <class name="SndEfw"
           c:symbol-prefix="snd_efw"
           c:type="HinawaSndEfw"
           parent="SndUnit"
           glib:type-name="HinawaSndEfw"
           glib:get-type="hinawa_snd_efw_get_type"
           glib:type-struct="SndEfwClass">
      <source-position filename="../src/snd_efw.h" line="69"/>
      <constructor name="new" c:identifier="hinawa_snd_efw_new" version="1.3.">
        <doc xml:space="preserve"
             filename="../src/snd_efw.c"
             line="99">Instantiate #HinawaSndEfw object and return the instance.</doc>
        <source-position filename="../src/snd_efw.h" line="73"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/snd_efw.c"
               line="104">an instance of #HinawaSndEfw.</doc>
          <type name="SndEfw" c:type="HinawaSndEfw*"/>
        </return-value>
      </constructor>
      <function name="error_quark" c:identifier="hinawa_snd_efw_error_quark">
        <doc xml:space="preserve"
             filename="../src/snd_efw.c"
             line="18">Return the GQuark for error domain of GError which has code in #HinawaSndEfwStatus.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/snd_efw.c"
               line="23">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
      <virtual-method name="responded">
        <doc xml:space="preserve"
             filename="../src/snd_efw.h"
             line="51">When the unit transfers asynchronous packet as response for Echo Audio Fireworks
protocol, and the process successfully reads the content of response from ALSA
Fireworks driver, the #HinawaSndEfwClass::responded signal handler is called with parameters
of the response.</doc>
        <source-position filename="../src/snd_efw.h" line="67"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.h"
                 line="53">A #HinawaSndEfw.</doc>
            <type name="SndEfw" c:type="HinawaSndEfw*"/>
          </instance-parameter>
          <parameter name="status" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.h"
                 line="54">One of #HinawaSndEfwStatus.</doc>
            <type name="SndEfwStatus" c:type="HinawaSndEfwStatus"/>
          </parameter>
          <parameter name="seqnum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.h"
                 line="55">The sequence number of response.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.h"
                 line="56">The value of category field in the response.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.h"
                 line="57">The value of command field in the response.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.h"
                 line="58">The array with elements for
   quadlet data of response for Echo Fireworks protocol.</doc>
            <array length="5" zero-terminated="0" c:type="const guint32*">
              <type name="guint32"/>
            </array>
          </parameter>
          <parameter name="frame_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.h"
                 line="60">The number of elements of the array.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="open" c:identifier="hinawa_snd_efw_open" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_efw.c"
             line="112">Open ALSA hwdep character device and check it for Fireworks devices.</doc>
        <source-position filename="../src/snd_efw.h" line="75"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="114">A #HinawaSndUnit</doc>
            <type name="SndEfw" c:type="HinawaSndEfw*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="115">A full path of a special file for ALSA hwdep character device</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction"
              c:identifier="hinawa_snd_efw_transaction"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_efw.c"
             line="323">Transfer request of transaction according to Echo Fireworks Transaction protocol, then wait for
the response of transaction within 200 millisecond timeout.</doc>
        <source-position filename="../src/snd_efw.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="325">A #HinawaSndEfw.</doc>
            <type name="SndEfw" c:type="HinawaSndEfw*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="326">one of category for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="327">one of commands for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="args"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="328">An array with elements for
  quadlet data as arguments for command.</doc>
            <array length="3" zero-terminated="0" c:type="const guint32*">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
          <parameter name="arg_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="330">The number of quadlets in the args array.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="params"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="331">An array with elements for
    quadlet data to save parameters in response. Callers should give it
    for buffer with enough space against the request since this library
    performs no reallocation. Due to the reason, the value of this
    argument should point to the pointer to the array and immutable.
    The content of array is mutable for parameters in response.</doc>
            <array length="5" zero-terminated="0" c:type="guint32* const*">
              <type name="guint32" c:type="guint32*"/>
            </array>
          </parameter>
          <parameter name="param_count"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="337">The number of quadlets in the params array.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_async"
              c:identifier="hinawa_snd_efw_transaction_async"
              version="2.1."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_efw.c"
             line="140">Transfer asynchronous transaction for command frame of Echo Fireworks protocol. When receiving
asynchronous transaction for response frame, #HinawaSndEfw::responded GObject signal is emitted.</doc>
        <source-position filename="../src/snd_efw.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="142">A #HinawaSndEfw.</doc>
            <type name="SndEfw" c:type="HinawaSndEfw*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="143">One of category for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="144">One of commands for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="args"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="145">An array with elements for quadlet data as
  arguments for command.</doc>
            <array length="3" zero-terminated="0" c:type="const guint32*">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
          <parameter name="arg_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="147">The number of quadlets in the args array.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="resp_seqnum"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="148">The sequence number for response transaction;</doc>
            <type name="guint32" c:type="guint32*"/>
          </parameter>
        </parameters>
      </method>
      <method name="transaction_sync"
              c:identifier="hinawa_snd_efw_transaction_sync"
              version="2.1."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_efw.c"
             line="239">Transfer asynchronous transaction for command frame of Echo Fireworks protocol, then wait
asynchronous transaction for response frame within the given timeout.</doc>
        <source-position filename="../src/snd_efw.h" line="87"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="241">A #HinawaSndEfw.</doc>
            <type name="SndEfw" c:type="HinawaSndEfw*"/>
          </instance-parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="242">one of category for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="243">one of commands for the transaction.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="args"
                     transfer-ownership="none"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="244">An array with elements for
  quadlet data as arguments for command.</doc>
            <array length="3" zero-terminated="0" c:type="const guint32*">
              <type name="guint32" c:type="guint32"/>
            </array>
          </parameter>
          <parameter name="arg_count" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="246">The number of quadlets in the args array.</doc>
            <type name="gsize" c:type="gsize"/>
          </parameter>
          <parameter name="params"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="full"
                     nullable="1"
                     allow-none="1">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="247">An array with elements for
    quadlet data to save parameters in response. Callers should give it
    for buffer with enough space against the request since this library
    performs no reallocation. Due to the reason, the value of this
    argument should point to the pointer to the array and immutable.
    The content of array is mutable for parameters in response.</doc>
            <array length="5" zero-terminated="0" c:type="guint32* const*">
              <type name="guint32" c:type="guint32*"/>
            </array>
          </parameter>
          <parameter name="param_count"
                     direction="inout"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="253">The number of quadlets in the params array.</doc>
            <type name="gsize" c:type="gsize*"/>
          </parameter>
          <parameter name="timeout_ms" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="254">The timeout to wait for response of the transaction since request is transferred in
	milliseconds.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SndUnit" c:type="HinawaSndUnit"/>
      </field>
      <field name="priv">
        <type name="SndEfwPrivate" c:type="HinawaSndEfwPrivate*"/>
      </field>
      <glib:signal name="responded" when="last">
        <doc xml:space="preserve"
             filename="../src/snd_efw.c"
             line="67">When the unit transfers asynchronous packet as response for Echo Audio Fireworks
protocol, and the process successfully reads the content of response from ALSA
Fireworks driver, the #HinawaSndEfw::responded signal handler is called with parameters
of the response.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="status" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="70">One of #HinawaSndEfwStatus.</doc>
            <type name="SndEfwStatus"/>
          </parameter>
          <parameter name="seqnum" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="71">The sequence number of response.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="category" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="72">The value of category field in the response.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="command" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="73">The value of command field in the response.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="frame" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="74">The array with elements for
   quadlet data of response for Echo Fireworks protocol.</doc>
            <array length="5" zero-terminated="0" c:type="gpointer">
              <type name="guint32"/>
            </array>
          </parameter>
          <parameter name="frame_size" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_efw.c"
                 line="76">The number of elements of the array.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SndEfwClass"
            c:type="HinawaSndEfwClass"
            glib:is-gtype-struct-for="SndEfw">
      <source-position filename="../src/snd_efw.h" line="69"/>
      <field name="parent_class">
        <type name="SndUnitClass" c:type="HinawaSndUnitClass"/>
      </field>
      <field name="responded">
        <callback name="responded">
          <source-position filename="../src/snd_efw.h" line="67"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_efw.h"
                   line="53">A #HinawaSndEfw.</doc>
              <type name="SndEfw" c:type="HinawaSndEfw*"/>
            </parameter>
            <parameter name="status" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_efw.h"
                   line="54">One of #HinawaSndEfwStatus.</doc>
              <type name="SndEfwStatus" c:type="HinawaSndEfwStatus"/>
            </parameter>
            <parameter name="seqnum" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_efw.h"
                   line="55">The sequence number of response.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="category" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_efw.h"
                   line="56">The value of category field in the response.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="command" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_efw.h"
                   line="57">The value of command field in the response.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="frame" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_efw.h"
                   line="58">The array with elements for
   quadlet data of response for Echo Fireworks protocol.</doc>
              <array length="6" zero-terminated="0" c:type="const guint32*">
                <type name="guint32"/>
              </array>
            </parameter>
            <parameter name="frame_size" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_efw.h"
                   line="60">The number of elements of the array.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="SndEfwPrivate" c:type="HinawaSndEfwPrivate" disguised="1">
      <source-position filename="../src/snd_efw.h" line="40"/>
    </record>
    <enumeration name="SndEfwStatus"
                 glib:type-name="HinawaSndEfwStatus"
                 glib:get-type="hinawa_snd_efw_status_get_type"
                 c:type="HinawaSndEfwStatus">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="189">A set of status code for Echo Audio Fireworks Transaction.</doc>
      <member name="ok"
              value="0"
              c:identifier="HINAWA_SND_EFW_STATUS_OK"
              glib:nick="ok">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="191">The transaction finishes successfully.</doc>
      </member>
      <member name="bad"
              value="1"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD"
              glib:nick="bad">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="192">The request or response includes invalid header.</doc>
      </member>
      <member name="bad_command"
              value="2"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_COMMAND"
              glib:nick="bad-command">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="193">The request includes invalid category or command.</doc>
      </member>
      <member name="comm_err"
              value="3"
              c:identifier="HINAWA_SND_EFW_STATUS_COMM_ERR"
              glib:nick="comm-err">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="194">The transaction fails due to communication error.</doc>
      </member>
      <member name="bad_quad_count"
              value="4"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_QUAD_COUNT"
              glib:nick="bad-quad-count">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="195">The number of quadlets in transaction is invalid.</doc>
      </member>
      <member name="unsupported"
              value="5"
              c:identifier="HINAWA_SND_EFW_STATUS_UNSUPPORTED"
              glib:nick="unsupported">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="196">The request is not supported.</doc>
      </member>
      <member name="timeout"
              value="6"
              c:identifier="HINAWA_SND_EFW_STATUS_TIMEOUT"
              glib:nick="timeout">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="197">The transaction is canceled due to response timeout.</doc>
      </member>
      <member name="dsp_timeout"
              value="7"
              c:identifier="HINAWA_SND_EFW_STATUS_DSP_TIMEOUT"
              glib:nick="dsp-timeout">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="198">The operation for DSP did not finish within timeout.</doc>
      </member>
      <member name="bad_rate"
              value="8"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_RATE"
              glib:nick="bad-rate">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="199">The request includes invalid value for sampling frequency.</doc>
      </member>
      <member name="bad_clock"
              value="9"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_CLOCK"
              glib:nick="bad-clock">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="200">The request includes invalid value for source of clock.</doc>
      </member>
      <member name="bad_channel"
              value="10"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_CHANNEL"
              glib:nick="bad-channel">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="201">The request includes invalid value for the number of channel.</doc>
      </member>
      <member name="bad_pan"
              value="11"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_PAN"
              glib:nick="bad-pan">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="202">The request includes invalid value for panning.</doc>
      </member>
      <member name="flash_busy"
              value="12"
              c:identifier="HINAWA_SND_EFW_STATUS_FLASH_BUSY"
              glib:nick="flash-busy">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="203">The on-board flash is busy and not operable.</doc>
      </member>
      <member name="bad_mirror"
              value="13"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_MIRROR"
              glib:nick="bad-mirror">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="204">The request includes invalid value for mirroring channel.</doc>
      </member>
      <member name="bad_led"
              value="14"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_LED"
              glib:nick="bad-led">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="205">The request includes invalid value for LED.</doc>
      </member>
      <member name="bad_parameter"
              value="15"
              c:identifier="HINAWA_SND_EFW_STATUS_BAD_PARAMETER"
              glib:nick="bad-parameter">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="206">The request includes invalid value of parameter.</doc>
      </member>
      <member name="large_resp"
              value="16"
              c:identifier="HINAWA_SND_EFW_STATUS_LARGE_RESP"
              glib:nick="large-resp">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="207">The size of response is larger than expected.</doc>
      </member>
    </enumeration>
    <class name="SndMotu"
           c:symbol-prefix="snd_motu"
           c:type="HinawaSndMotu"
           parent="SndUnit"
           glib:type-name="HinawaSndMotu"
           glib:get-type="hinawa_snd_motu_get_type"
           glib:type-struct="SndMotuClass">
      <source-position filename="../src/snd_motu.h" line="56"/>
      <constructor name="new"
                   c:identifier="hinawa_snd_motu_new"
                   version="1.3.">
        <doc xml:space="preserve"
             filename="../src/snd_motu.c"
             line="54">Instantiate #HinawaSndMotu object and return the instance.</doc>
        <source-position filename="../src/snd_motu.h" line="60"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/snd_motu.c"
               line="59">an instance of #HinawaSndMotu.</doc>
          <type name="SndMotu" c:type="HinawaSndMotu*"/>
        </return-value>
      </constructor>
      <virtual-method name="notified">
        <doc xml:space="preserve"
             filename="../src/snd_motu.h"
             line="47">When Motu models transfer notification, the #HinawaSndMotuClass::notified handler is
called.</doc>
        <source-position filename="../src/snd_motu.h" line="55"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_motu.h"
                 line="49">A #HinawaSndMotu</doc>
            <type name="SndMotu" c:type="HinawaSndMotu*"/>
          </instance-parameter>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_motu.h"
                 line="50">A notification message</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="open" c:identifier="hinawa_snd_motu_open" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_motu.c"
             line="67">Open ALSA hwdep character device and check it for Motu devices.</doc>
        <source-position filename="../src/snd_motu.h" line="62"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_motu.c"
                 line="69">A #HinawaSndUnit</doc>
            <type name="SndMotu" c:type="HinawaSndMotu*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_motu.c"
                 line="70">A full path of a special file for ALSA hwdep character device</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SndUnit" c:type="HinawaSndUnit"/>
      </field>
      <field name="priv">
        <type name="SndMotuPrivate" c:type="HinawaSndMotuPrivate*"/>
      </field>
      <glib:signal name="notified" when="last">
        <doc xml:space="preserve"
             filename="../src/snd_motu.c"
             line="31">When Motu models transfer notification, the #HinawaSndMotu::notified signal is
generated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="message" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_motu.c"
                 line="34">A notification message</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SndMotuClass"
            c:type="HinawaSndMotuClass"
            glib:is-gtype-struct-for="SndMotu">
      <source-position filename="../src/snd_motu.h" line="56"/>
      <field name="parent_class">
        <type name="SndUnitClass" c:type="HinawaSndUnitClass"/>
      </field>
      <field name="notified">
        <callback name="notified">
          <source-position filename="../src/snd_motu.h" line="55"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_motu.h"
                   line="49">A #HinawaSndMotu</doc>
              <type name="SndMotu" c:type="HinawaSndMotu*"/>
            </parameter>
            <parameter name="message" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_motu.h"
                   line="50">A notification message</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="SndMotuPrivate" c:type="HinawaSndMotuPrivate" disguised="1">
      <source-position filename="../src/snd_motu.h" line="36"/>
    </record>
    <class name="SndTscm"
           c:symbol-prefix="snd_tscm"
           c:type="HinawaSndTscm"
           parent="SndUnit"
           glib:type-name="HinawaSndTscm"
           glib:get-type="hinawa_snd_tscm_get_type"
           glib:type-struct="SndTscmClass">
      <source-position filename="../src/snd_tscm.h" line="59"/>
      <constructor name="new"
                   c:identifier="hinawa_snd_tscm_new"
                   version="1.3.">
        <doc xml:space="preserve"
             filename="../src/snd_tscm.c"
             line="60">Instantiate #HinawaSndTscm object and return the instance.</doc>
        <source-position filename="../src/snd_tscm.h" line="63"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/snd_tscm.c"
               line="65">an instance of #HinawaSndTscm.</doc>
          <type name="SndTscm" c:type="HinawaSndTscm*"/>
        </return-value>
      </constructor>
      <virtual-method name="control">
        <doc xml:space="preserve"
             filename="../src/snd_tscm.h"
             line="47">When TASCAM FireWire unit transfer control message, the #HinawaSndTscmClass::control
handler is emitted.</doc>
        <source-position filename="../src/snd_tscm.h" line="57"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.h"
                 line="49">A #HinawaSndTscm</doc>
            <type name="SndTscm" c:type="HinawaSndTscm*"/>
          </instance-parameter>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.h"
                 line="50">the numerical index on image of status and control info.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="before" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.h"
                 line="51">the value of info before changed.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="after" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.h"
                 line="52">the value of info after changed.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="get_state"
              c:identifier="hinawa_snd_tscm_get_state"
              throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_tscm.c"
             line="91">Get the latest states of target device.</doc>
        <source-position filename="../src/snd_tscm.h" line="67"/>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/snd_tscm.c"
               line="98">state
	    image.</doc>
          <array zero-terminated="0" c:type="const guint32*" fixed-size="64">
            <type name="guint32"/>
          </array>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.c"
                 line="93">A #HinawaSndTscm</doc>
            <type name="SndTscm" c:type="HinawaSndTscm*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open" c:identifier="hinawa_snd_tscm_open" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_tscm.c"
             line="73">Open ALSA hwdep character device and check it for Dg00x  devices.</doc>
        <source-position filename="../src/snd_tscm.h" line="65"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.c"
                 line="75">A #HinawaSndUnit</doc>
            <type name="SndTscm" c:type="HinawaSndTscm*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.c"
                 line="76">A full path of a special file for ALSA hwdep character device</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <field name="parent_instance">
        <type name="SndUnit" c:type="HinawaSndUnit"/>
      </field>
      <field name="priv">
        <type name="SndTscmPrivate" c:type="HinawaSndTscmPrivate*"/>
      </field>
      <glib:signal name="control" when="last">
        <doc xml:space="preserve"
             filename="../src/snd_tscm.c"
             line="34">When TASCAM FireWire unit transfer control message, the #HinawaSndTscm::control
signal is emitted.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="index" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.c"
                 line="37">the numerical index on image of status and control info.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="before" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.c"
                 line="38">the value of info before changed.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
          <parameter name="after" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_tscm.c"
                 line="39">the value of info after changed.</doc>
            <type name="guint" c:type="guint"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SndTscmClass"
            c:type="HinawaSndTscmClass"
            glib:is-gtype-struct-for="SndTscm">
      <source-position filename="../src/snd_tscm.h" line="59"/>
      <field name="parent_class">
        <type name="SndUnitClass" c:type="HinawaSndUnitClass"/>
      </field>
      <field name="control">
        <callback name="control">
          <source-position filename="../src/snd_tscm.h" line="57"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_tscm.h"
                   line="49">A #HinawaSndTscm</doc>
              <type name="SndTscm" c:type="HinawaSndTscm*"/>
            </parameter>
            <parameter name="index" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_tscm.h"
                   line="50">the numerical index on image of status and control info.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="before" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_tscm.h"
                   line="51">the value of info before changed.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
            <parameter name="after" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_tscm.h"
                   line="52">the value of info after changed.</doc>
              <type name="guint" c:type="guint"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <record name="SndTscmPrivate" c:type="HinawaSndTscmPrivate" disguised="1">
      <source-position filename="../src/snd_tscm.h" line="36"/>
    </record>
    <class name="SndUnit"
           c:symbol-prefix="snd_unit"
           c:type="HinawaSndUnit"
           parent="GObject.Object"
           glib:type-name="HinawaSndUnit"
           glib:get-type="hinawa_snd_unit_get_type"
           glib:type-struct="SndUnitClass">
      <source-position filename="../src/snd_unit.h" line="71"/>
      <constructor name="new"
                   c:identifier="hinawa_snd_unit_new"
                   version="1.3.">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="215">Instantiate #HinawaSndUnit object and return the instance.</doc>
        <source-position filename="../src/snd_unit.h" line="75"/>
        <return-value transfer-ownership="full">
          <doc xml:space="preserve"
               filename="../src/snd_unit.c"
               line="220">an instance of #HinawaSndUnit.</doc>
          <type name="SndUnit" c:type="HinawaSndUnit*"/>
        </return-value>
      </constructor>
      <virtual-method name="disconnected">
        <doc xml:space="preserve"
             filename="../src/snd_unit.h"
             line="61">When the sound card is not available anymore due to unbinding driver
or hot unplugging, this signal is emit. The owner of this object
should call g_object_free() as quickly as possible to release ALSA
hwdep character device.</doc>
        <source-position filename="../src/snd_unit.h" line="70"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.h"
                 line="63">A #HinawaSndUnit</doc>
            <type name="SndUnit" c:type="HinawaSndUnit*"/>
          </instance-parameter>
        </parameters>
      </virtual-method>
      <virtual-method name="lock_status">
        <doc xml:space="preserve"
             filename="../src/snd_unit.h"
             line="51">When ALSA kernel-streaming status is changed, this #HinawaSndUnitClass::lock_status
handler is called.</doc>
        <source-position filename="../src/snd_unit.h" line="59"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.h"
                 line="53">A #HinawaSndUnit</doc>
            <type name="SndUnit" c:type="HinawaSndUnit*"/>
          </instance-parameter>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.h"
                 line="54">%TRUE when locked, %FALSE when unlocked.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </virtual-method>
      <method name="create_source"
              c:identifier="hinawa_snd_unit_create_source"
              version="1.4."
              throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="561">Create Gsource for GMainContext to dispatch events for the sound device.</doc>
        <source-position filename="../src/snd_unit.h" line="84"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="563">A #HinawaSndUnit.</doc>
            <type name="SndUnit" c:type="HinawaSndUnit*"/>
          </instance-parameter>
          <parameter name="gsrc"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="full">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="564">A #GSource.</doc>
            <type name="GLib.Source" c:type="GSource**"/>
          </parameter>
        </parameters>
      </method>
      <method name="get_node"
              c:identifier="hinawa_snd_unit_get_node"
              version="2.0.">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="317">Retrieve an instance of #HinawaFwNode associated to the given unit.</doc>
        <source-position filename="../src/snd_unit.h" line="79"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="319">A #HinawaSndUnit.</doc>
            <type name="SndUnit" c:type="HinawaSndUnit*"/>
          </instance-parameter>
          <parameter name="node"
                     direction="out"
                     caller-allocates="0"
                     transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="320">A #HinawaFwNode.</doc>
            <type name="FwNode" c:type="HinawaFwNode**"/>
          </parameter>
        </parameters>
      </method>
      <method name="lock" c:identifier="hinawa_snd_unit_lock" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="338">Disallow ALSA to start kernel-streaming.</doc>
        <source-position filename="../src/snd_unit.h" line="81"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="340">A #HinawaSndUnit</doc>
            <type name="SndUnit" c:type="HinawaSndUnit*"/>
          </instance-parameter>
        </parameters>
      </method>
      <method name="open" c:identifier="hinawa_snd_unit_open" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="228">Open ALSA hwdep character device and check it for FireWire sound devices.</doc>
        <source-position filename="../src/snd_unit.h" line="77"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="230">A #HinawaSndUnit</doc>
            <type name="SndUnit" c:type="HinawaSndUnit*"/>
          </instance-parameter>
          <parameter name="path" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="231">A full path of a special file for ALSA hwdep character device</doc>
            <type name="utf8" c:type="gchar*"/>
          </parameter>
        </parameters>
      </method>
      <method name="unlock" c:identifier="hinawa_snd_unit_unlock" throws="1">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="368">Allow ALSA to start kernel-streaming.</doc>
        <source-position filename="../src/snd_unit.h" line="82"/>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <instance-parameter name="self" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="370">A #HinawaSndUnit</doc>
            <type name="SndUnit" c:type="HinawaSndUnit*"/>
          </instance-parameter>
        </parameters>
      </method>
      <property name="card" transfer-ownership="none">
        <type name="guint" c:type="guint"/>
      </property>
      <property name="device" transfer-ownership="none">
        <type name="utf8" c:type="gchar*"/>
      </property>
      <property name="guid" transfer-ownership="none">
        <type name="guint64" c:type="guint64"/>
      </property>
      <property name="streaming" transfer-ownership="none">
        <type name="gboolean" c:type="gboolean"/>
      </property>
      <property name="type" transfer-ownership="none">
        <type name="SndUnitType"/>
      </property>
      <field name="parent_instance">
        <type name="GObject.Object" c:type="GObject"/>
      </field>
      <field name="priv">
        <type name="SndUnitPrivate" c:type="HinawaSndUnitPrivate*"/>
      </field>
      <glib:signal name="disconnected" when="last">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="188">When the sound card is not available anymore due to unbinding driver
or hot unplugging, this signal is emit. The owner of this object
should call g_object_free() as quickly as possible to release ALSA
hwdep character device.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
      </glib:signal>
      <glib:signal name="lock-status" when="last">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="171">When ALSA kernel-streaming status is changed, this #HinawaSndUnit::lock-status
signal is generated.</doc>
        <return-value transfer-ownership="none">
          <type name="none" c:type="void"/>
        </return-value>
        <parameters>
          <parameter name="state" transfer-ownership="none">
            <doc xml:space="preserve"
                 filename="../src/snd_unit.c"
                 line="174">%TRUE when locked, %FALSE when unlocked.</doc>
            <type name="gboolean" c:type="gboolean"/>
          </parameter>
        </parameters>
      </glib:signal>
    </class>
    <record name="SndUnitClass"
            c:type="HinawaSndUnitClass"
            glib:is-gtype-struct-for="SndUnit">
      <source-position filename="../src/snd_unit.h" line="71"/>
      <field name="parent_class">
        <type name="GObject.ObjectClass" c:type="GObjectClass"/>
      </field>
      <field name="lock_status">
        <callback name="lock_status">
          <source-position filename="../src/snd_unit.h" line="59"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_unit.h"
                   line="53">A #HinawaSndUnit</doc>
              <type name="SndUnit" c:type="HinawaSndUnit*"/>
            </parameter>
            <parameter name="state" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_unit.h"
                   line="54">%TRUE when locked, %FALSE when unlocked.</doc>
              <type name="gboolean" c:type="gboolean"/>
            </parameter>
          </parameters>
        </callback>
      </field>
      <field name="disconnected">
        <callback name="disconnected">
          <source-position filename="../src/snd_unit.h" line="70"/>
          <return-value transfer-ownership="none">
            <type name="none" c:type="void"/>
          </return-value>
          <parameters>
            <parameter name="self" transfer-ownership="none">
              <doc xml:space="preserve"
                   filename="../src/snd_unit.h"
                   line="63">A #HinawaSndUnit</doc>
              <type name="SndUnit" c:type="HinawaSndUnit*"/>
            </parameter>
          </parameters>
        </callback>
      </field>
    </record>
    <enumeration name="SndUnitError"
                 glib:type-name="HinawaSndUnitError"
                 glib:get-type="hinawa_snd_unit_error_get_type"
                 c:type="HinawaSndUnitError"
                 glib:error-domain="hinawa-snd-unit-error-quark">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="153">A set of error code for GError with domain which equals to #hinawa_snd_unit_error_quark().</doc>
      <member name="disconnected"
              value="0"
              c:identifier="HINAWA_SND_UNIT_ERROR_DISCONNECTED"
              glib:nick="disconnected">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="155">The hwdep device associated to the instance is disconnected.</doc>
      </member>
      <member name="used"
              value="1"
              c:identifier="HINAWA_SND_UNIT_ERROR_USED"
              glib:nick="used">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="156">The hedep device is already in use.</doc>
      </member>
      <member name="opened"
              value="2"
              c:identifier="HINAWA_SND_UNIT_ERROR_OPENED"
              glib:nick="opened">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="157">The instance is already associated to unit by opening hwdep
				character device.</doc>
      </member>
      <member name="not_opened"
              value="3"
              c:identifier="HINAWA_SND_UNIT_ERROR_NOT_OPENED"
              glib:nick="not-opened">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="159">The instance is not associated to unit yet by opening hwdep
				character device.</doc>
      </member>
      <member name="locked"
              value="4"
              c:identifier="HINAWA_SND_UNIT_ERROR_LOCKED"
              glib:nick="locked">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="161">The hwdep device is already locked for kernel packet streaming.</doc>
      </member>
      <member name="unlocked"
              value="5"
              c:identifier="HINAWA_SND_UNIT_ERROR_UNLOCKED"
              glib:nick="unlocked">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="162">The hwdep device is not locked for kernel packet streaming yet.</doc>
      </member>
      <member name="wrong_class"
              value="6"
              c:identifier="HINAWA_SND_UNIT_ERROR_WRONG_CLASS"
              glib:nick="wrong-class">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="163">The hwdep device is not for the unit expected by the class.</doc>
      </member>
      <member name="failed"
              value="7"
              c:identifier="HINAWA_SND_UNIT_ERROR_FAILED"
              glib:nick="failed">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="164">The system call fails.</doc>
      </member>
      <function name="quark" c:identifier="hinawa_snd_unit_error_quark">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="26">Return the GQuark for error domain of GError which has code in #HinawaSndUnitError.</doc>
        <return-value transfer-ownership="none">
          <doc xml:space="preserve"
               filename="../src/snd_unit.c"
               line="31">A #GQuark.</doc>
          <type name="GLib.Quark" c:type="GQuark"/>
        </return-value>
      </function>
    </enumeration>
    <record name="SndUnitPrivate" c:type="HinawaSndUnitPrivate" disguised="1">
      <source-position filename="../src/snd_unit.h" line="40"/>
    </record>
    <enumeration name="SndUnitType"
                 glib:type-name="HinawaSndUnitType"
                 glib:get-type="hinawa_snd_unit_type_get_type"
                 c:type="HinawaSndUnitType">
      <doc xml:space="preserve"
           filename="../src/hinawa_enum_types.h"
           line="85">A representation of type for sound unit defined by Linux sound subsystem.</doc>
      <member name="dice"
              value="1"
              c:identifier="HINAWA_SND_UNIT_TYPE_DICE"
              glib:nick="dice">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="87">The type of DICE ASIC.</doc>
      </member>
      <member name="fireworks"
              value="2"
              c:identifier="HINAWA_SND_UNIT_TYPE_FIREWORKS"
              glib:nick="fireworks">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="88">The type of Fireworks board module.</doc>
      </member>
      <member name="bebob"
              value="3"
              c:identifier="HINAWA_SND_UNIT_TYPE_BEBOB"
              glib:nick="bebob">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="89">The type of BeBoB ASIC.</doc>
      </member>
      <member name="oxfw"
              value="4"
              c:identifier="HINAWA_SND_UNIT_TYPE_OXFW"
              glib:nick="oxfw">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="90">The type of OXFW ASIC</doc>
      </member>
      <member name="digi00x"
              value="5"
              c:identifier="HINAWA_SND_UNIT_TYPE_DIGI00X"
              glib:nick="digi00x">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="91">The type of Digi00x series.</doc>
      </member>
      <member name="tascam"
              value="6"
              c:identifier="HINAWA_SND_UNIT_TYPE_TASCAM"
              glib:nick="tascam">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="92">The type of Tascam FireWire series.</doc>
      </member>
      <member name="motu"
              value="7"
              c:identifier="HINAWA_SND_UNIT_TYPE_MOTU"
              glib:nick="motu">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="93">The type of MOTU FireWire series.</doc>
      </member>
      <member name="fireface"
              value="8"
              c:identifier="HINAWA_SND_UNIT_TYPE_FIREFACE"
              glib:nick="fireface">
        <doc xml:space="preserve"
             filename="../src/hinawa_enum_types.h"
             line="94">The type of RME Fireface series.</doc>
      </member>
    </enumeration>
    <function name="fw_fcp_error_quark"
              c:identifier="hinawa_fw_fcp_error_quark"
              moved-to="FwFcpError.quark">
      <doc xml:space="preserve"
           filename="../src/fw_fcp.c"
           line="25">Return the GQuark for error domain of GError which has code in #HinawaFwFcpError.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/fw_fcp.c"
             line="30">A #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="fw_node_error_quark"
              c:identifier="hinawa_fw_node_error_quark"
              moved-to="FwNodeError.quark">
      <doc xml:space="preserve"
           filename="../src/fw_node.c"
           line="46">Return the GQuark for error domain of GError which has code in #HinawaFwNodeError.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/fw_node.c"
             line="51">A #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="fw_resp_error_quark"
              c:identifier="hinawa_fw_resp_error_quark"
              moved-to="FwRespError.quark">
      <doc xml:space="preserve"
           filename="../src/fw_resp.c"
           line="22">Return the GQuark for error domain of GError which has code in #HinawaFwRespError.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/fw_resp.c"
             line="27">A #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="sigs_marshal_ENUM__ENUM"
              c:identifier="hinawa_sigs_marshal_ENUM__ENUM">
      <source-position filename="../src/hinawa_sigs_marshal.h" line="10"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="invocation_hint"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="sigs_marshal_ENUM__ENUM_UINT64_UINT_UINT_UINT_UINT_POINTER_UINT"
              c:identifier="hinawa_sigs_marshal_ENUM__ENUM_UINT64_UINT_UINT_UINT_UINT_POINTER_UINT">
      <source-position filename="../src/hinawa_sigs_marshal.h" line="55"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="invocation_hint"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="sigs_marshal_VOID__ENUM_POINTER_UINT"
              c:identifier="hinawa_sigs_marshal_VOID__ENUM_POINTER_UINT">
      <source-position filename="../src/hinawa_sigs_marshal.h" line="28"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="invocation_hint"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="sigs_marshal_VOID__ENUM_UINT_UINT_UINT_POINTER_UINT"
              c:identifier="hinawa_sigs_marshal_VOID__ENUM_UINT_UINT_UINT_POINTER_UINT">
      <source-position filename="../src/hinawa_sigs_marshal.h" line="37"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="invocation_hint"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="sigs_marshal_VOID__POINTER_UINT"
              c:identifier="hinawa_sigs_marshal_VOID__POINTER_UINT">
      <source-position filename="../src/hinawa_sigs_marshal.h" line="46"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="invocation_hint"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="sigs_marshal_VOID__UINT_UINT_UINT"
              c:identifier="hinawa_sigs_marshal_VOID__UINT_UINT_UINT">
      <source-position filename="../src/hinawa_sigs_marshal.h" line="19"/>
      <return-value transfer-ownership="none">
        <type name="none" c:type="void"/>
      </return-value>
      <parameters>
        <parameter name="closure" transfer-ownership="none">
          <type name="GObject.Closure" c:type="GClosure*"/>
        </parameter>
        <parameter name="return_value" transfer-ownership="none">
          <type name="GObject.Value" c:type="GValue*"/>
        </parameter>
        <parameter name="n_param_values" transfer-ownership="none">
          <type name="guint" c:type="guint"/>
        </parameter>
        <parameter name="param_values" transfer-ownership="none">
          <type name="GObject.Value" c:type="const GValue*"/>
        </parameter>
        <parameter name="invocation_hint"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
        <parameter name="marshal_data"
                   transfer-ownership="none"
                   nullable="1"
                   allow-none="1">
          <type name="gpointer" c:type="gpointer"/>
        </parameter>
      </parameters>
    </function>
    <function name="snd_dice_error_quark"
              c:identifier="hinawa_snd_dice_error_quark"
              moved-to="SndDiceError.quark">
      <doc xml:space="preserve"
           filename="../src/snd_dice.c"
           line="17">Return the GQuark for error domain of GError which has code in #HinawaSndDiceError.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/snd_dice.c"
             line="22">A #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
    <function name="snd_unit_error_quark"
              c:identifier="hinawa_snd_unit_error_quark"
              moved-to="SndUnitError.quark">
      <doc xml:space="preserve"
           filename="../src/snd_unit.c"
           line="26">Return the GQuark for error domain of GError which has code in #HinawaSndUnitError.</doc>
      <return-value transfer-ownership="none">
        <doc xml:space="preserve"
             filename="../src/snd_unit.c"
             line="31">A #GQuark.</doc>
        <type name="GLib.Quark" c:type="GQuark"/>
      </return-value>
    </function>
  </namespace>
</repository>
